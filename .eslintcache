[{"/Users/damien/projects/test-react/src/index.tsx":"1","/Users/damien/projects/test-react/src/App.tsx":"2","/Users/damien/projects/test-react/src/utils.tsx":"3","/Users/damien/projects/test-react/src/core/grid.tsx":"4","/Users/damien/projects/test-react/src/images/tileDefaults.tsx":"5","/Users/damien/projects/test-react/src/components/Grid.tsx":"6","/Users/damien/projects/test-react/src/components/Header.tsx":"7","/Users/damien/projects/test-react/src/components/Tile.tsx":"8","/Users/damien/projects/test-react/src/components/HeaderItem.tsx":"9","/Users/damien/projects/test-react/src/components/TileInterface.ts":"10"},{"size":271,"mtime":1606926991647,"results":"11","hashOfConfig":"12"},{"size":2581,"mtime":1606988101915,"results":"13","hashOfConfig":"12"},{"size":558,"mtime":1606954478519,"results":"14","hashOfConfig":"12"},{"size":774,"mtime":1606988075977,"results":"15","hashOfConfig":"12"},{"size":993,"mtime":1606954394455,"results":"16","hashOfConfig":"12"},{"size":1710,"mtime":1606934020895,"results":"17","hashOfConfig":"12"},{"size":513,"mtime":1606934307443,"results":"18","hashOfConfig":"12"},{"size":1532,"mtime":1606988462030,"results":"19","hashOfConfig":"12"},{"size":512,"mtime":1606935642161,"results":"20","hashOfConfig":"12"},{"size":107,"mtime":1606988020409,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1qezuju",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/damien/projects/test-react/src/index.tsx",["45"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as types from 'styled-components/cssprop';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["46","47"],"/Users/damien/projects/test-react/src/App.tsx",["48","49"],"/Users/damien/projects/test-react/src/utils.tsx",["50"],"/Users/damien/projects/test-react/src/core/grid.tsx",[],"/Users/damien/projects/test-react/src/images/tileDefaults.tsx",["51"],"/Users/damien/projects/test-react/src/components/Grid.tsx",["52"],"import styled from 'styled-components';\nimport Tile from \"./Tile\";\nimport { shuffle } from '../utils';\nimport { gridIsCompleted } from '../core/grid';\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(4, 10em);\n\n  width: 40em;\n  grid-column-gap: 1em;\n  grid-row-gap: 1em;\n  margin-bottom: 2em;\n`;\n\nconst ResetInput = styled.input`\n  margin: auto;\n  display: block;\n  background: rgb(9, 211, 172);\n  padding: 0.5em;\n  border-radius: 0.2em;\n  appearance: none;\n  color: rgb(41, 45, 62);\n  border: none;\n  cursor: pointer;\n`;\n\ntype GridProps = {\n  setTiles: any,\n  tiles: Array<any>,\n  tries: number,\n  setTries: any,\n  gameState: string,\n  setGameState: any,\n  startGame: any,\n  currentTiles: Array<any>,\n  setCurrentTiles: any,\n  resetGame: any,\n  stopGame: any\n}\n\nconst Grid = ({\n  setTiles,\n  tiles,\n  tries,\n  setTries,\n  gameState,\n  setGameState,\n  startGame,\n  currentTiles,\n  setCurrentTiles,\n  resetGame,\n  stopGame\n}: GridProps) => {\n  if(tiles.length === 0) {\n    resetGame();\n    return(\n      <div />\n    )\n  }\n\n  // Check if grid is completed\n  if(gridIsCompleted(tiles)) {\n    stopGame();\n  }\n\n  return (\n    <div>\n      <StyledGrid>\n        { tiles.map(tile => (\n          <Tile\n            {...{\n              tile,\n              setTiles,\n              tiles,\n              startGame,\n              gameState,\n              currentTiles,\n              setCurrentTiles,\n              setTries,\n              tries\n            }}\n          />\n        )) }\n      </StyledGrid>\n\n      <ResetInput\n        onClick={ resetGame }\n        type=\"button\"\n        value=\"RÃ©initialiser\"\n      />\n    </div>\n  )\n};\n\nexport default Grid;\n","/Users/damien/projects/test-react/src/components/Header.tsx",[],"/Users/damien/projects/test-react/src/components/Tile.tsx",[],"/Users/damien/projects/test-react/src/components/HeaderItem.tsx",[],"/Users/damien/projects/test-react/src/components/TileInterface.ts",[],{"ruleId":"53","severity":1,"message":"54","line":4,"column":13,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":58,"column":6,"nodeType":"63","endLine":58,"endColumn":13,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":76,"column":6,"nodeType":"63","endLine":76,"endColumn":20,"suggestions":"66"},{"ruleId":"53","severity":1,"message":"67","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":9},{"ruleId":"68","severity":1,"message":"69","line":15,"column":1,"nodeType":"70","endLine":24,"endColumn":3},{"ruleId":"53","severity":1,"message":"71","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":17},"@typescript-eslint/no-unused-vars","'types' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameState' and 'startTimer'. Either include them or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has missing dependencies: 'tiles' and 'tries'. Either include them or remove the dependency array. You can also do a functional update 'setTries(t => ...)' if you only need 'tries' in the 'setTries' call.",["75"],"'_' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'shuffle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [gameState, startTimer, timer]",{"range":"80","text":"81"},"Update the dependencies array to be: [currentTiles, tiles, tries]",{"range":"82","text":"83"},[1595,1602],"[gameState, startTimer, timer]",[2108,2122],"[currentTiles, tiles, tries]"]